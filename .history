2
0
<
exit
echo ${lol"}"{}"{}"""'}'}
exit
echo ${lol"}"{}"{}"""}
echo ${lol"}"{}"{}"}
echo ${lol"}"}
exit
echo ${PATH"}"}
exit
echo ${PATH"}"}}}}}}}}}}}}}}}}}}}}}}}}}}}l isjfosjkfoshrdftoesr}
exit
Echo ${PATH:+}
exit
Echo ${PAT}
exit
Echo ${PATH:+}
exit
Echo ${PATH:+}
Echo ${PATH:}
Echo ${PATH:"+"}
Echo ${PATH:+""}
exit
Echo ${PATH:+""}
Echo ${PATH:"+"}
ls hi "a teur"lol lol
exit
ls hi "a teur"lol lol
Echo ${PATH:+}
exit
Echo ${PATH:+}
exit
Echo ${PATH:+"{}}"
exit
Echo ${PATH:+"{}}"
Echo ${PATH:+"{}"}
exit
Echo ${PATH:+"{}}"
exit
Echo ${PATH:+"{"}}
exit
echo \${PATH}  ; \"${HOME}\" ;  echo I print
ls hi "a teur"lol lol
ls hi"a teur"lol lol
ls "a" "teur"lol lol
ls "a uteur"lol lol
ls "a""teur"lol mdr
ls "a""teur"lol
ls "a""teur"
ls "a"uteur
ls """"""
ls "a t"eur"lol lol"
ls "a t"eur"lol lol" lol
exit
ls "a t"eur"lol lol" lol
echo \${PATH}  ; \"${HOME}\" ;  echo I print
exit
ls "a t"eur"lol lol" lol
echo \${PATH}  ; \"${HOME}\" ;  echo I print
ls "a t"eur"lol lol" lol
exit
ls "a t"eur"lol lol" lol
exit
ls "a t"eur"lol lol" lol
exit
ls "a t"eur"lol lol" lol
exit
ls "a t"eur"lol lol" lol
exit
ls "a t"eur"lol lol" lol
exit
ls "a t"eur"lol lol" lol
exit
ls "a t"eur"lol lol" lol
exit
ls "a t"eur"lol lol" lol
exit
ls "a t"eur"lol lol" lol
exit
ls "a t"eur"lol lol" lol
ls "a t"eur"lol lol"
exit
ls "a t"eur"lol lol"
exit
ls "a t"eur"lol lol"
echo \${PATH}  ; \"${HOME}\" ;  echo I print
exit
echo \${PATH}  ; \"${HOME}\" ;  echo I print
exit
echo \${PATH}  ; \"${HOME}\" ;  echo I print
ls "a t"eur"lol lol"
exit
ls "a t"eur"lol lol"
exit
ls "a t"eur"lol lol"
exit
ls "a t"eur"lol lol"
exit
ls "a t"eur"lol lol"
echo \${PATH}  ; \"${HOME}\" ;  echo I print
exit
echo \${PATH}  ; \"${HOME}\" ;  echo I print
exit
echo \${PATH}  ; \"${HOME}\" ;  echo I print
exit
echo \${PATH}  ; \"${HOME}\" ;  echo I print
echo '${PATH}  ; ${HOME} ;  echo I print'
echo ${PATH}  ; '${HOME}' ;  echo I print
echo ${PATH}  ; "${HOME}" ;  echo I print
echo ${PATH}  ; ${HOME} ;  echo I print
echo ${PATH} ${HOME} && echo I print
echo ${PATH}__${HOME} && echo I print
echo ${PATH}__${HOME}
echo ${PATH} ${HOME}
ls "a t"eur"lol lol"
exit
ls "a t"eur"lol lol"
echo ${PATH} ${HOME}
echo ${PATH}__${HOME}
ls "a t"eur"lol lol"
exit
ls "a t"eur"lol lol"
exit
ls "a t"eur"lol lol"
echo ${PATH}__${HOME}
echo ${PATH} ${HOME}
exit
echo ${PATH} ${HOME}
exit
echo ${PATH} ${HOME}
exit
echo ${PATH} ${HOME}
exit
echo ${PATH}__${HOME}
echo ${PATH} ${HOME}
exit
echo ${PATH} ${HOME}
exit
echo ${PATH} ${HOME}
exit
echo ${PATH} ${HOME}
exit
echo ${PATH} ${HOME}
<<<<<<< HEAD
$kjkjh | ls
$kjkjh ; ls
ls
$kjkjh
echo $ljkdjfhdfdfffd ; ls

echo $ljkdjfhdfdfffd ; ls
ls
echo $ljkdjfhdfdfffd
ls
lsls
ls
fjfjf
ls
$dslkfj
.
ls
mkdir dirtest
unset PATH
env
PATH=lol ls
ls
PATH=lol ls
ls
pwd
ls
PATH=lol ls
env
PATH=lol ls
ls
PATH=lol ls
env
PATH=lol ls
ls
env
ls
PATH=lol ls
ls
env
set
env
set
PATH=lol ls
ls
PATH=lol env
ls
env
PATH=lol env
ls
PATH=lol pwd
ls
env
ls
PATH=lol hash
PATH=lol pwd
PATH=lol env
env
PATH=lol env
PATH=lol set
PATH=lol env
PATH=lol ls
PATH=lol env
PATH=lol ls
PATH=lol env
env
PATH=lol env
PATH=lol ls
PATH=lol /bin/ls
PATH=lol ls
PATH=lol /bin/ls
jobs
PATH=lol /bin/ls
PATH=lol ls 
PATH=lol sdf 
PATH=lol ls 
PATH=lol ls
ls
env
PATH=lol ls
PATH=lol env
PATH=lol ls
PATH=lol la
PATH=lol env
PATH=lol ls
hash
PATH=lol set
hash
ls
env
setenv
set
env
export z
env
set
setn
z=r
env
set
export lol=lala
set
env
export lol=lala
env
set
se
export a
env
set
a=b
set
env
export a
env
set
a=b
set
env
export KIKI=olp
set
env
export KIKI=olp
export KIKI
set
env
export a
set
a=b
zo=lol ls | cat -e
zo=lol ls | cat -w
zo=lol ls | echo lol
zo=lol ls | cat
zo=lol ls
zo=lol | set
zo=lol ls | echo lol
zo=lol ls | pwd
zo=lol ls | echo lol
man ascii
zo=lol ls | echo lol
env
zo=lol env | cat -e
zo=lol env | cat
zo=lol ls | echo lol
zo=lol env | echo $zo
ONE= env | grep ONE
ls
ls -l | ls
ls -l
ls
ls -l
l
c=e echo $c
c=r
c=r echo $c
setenv A=BBB env
set
env
setenv A=BBB
set
env
wouwou=leee
set
wouwou=lol 
wouwou=lol ls
env
wouwou=lol env
wouwou=lol env | grep wouwou
wouwou=lol env | cat

wouwou=lol env | cat
wouwou=lol env 
wouwou=lol env | cat
wouwou=lol env | grep wouwou
wouwou=lol env | cat
wouwou=lol env | grep wouwou
wouwou=lol env 
wouwou=lol env | grep wouwou
wouwou=lol | grep wouwou
set
env
ONE= set 
ONE= set | grep ONE
ONE= env | grep ONE
ONE= set | grep one
ONE= env | grep one
ONE= env 
ONE= env | grep ONE
PATH=lol set
set
env
ls
PATH=lol env
ls
PATH=lol env
ls
PATH=lol env

PATH=lol env
ls
PATH=lol env
env 
PATH=lol env
env | /usr/bin/grep KEY
PATH=lol env
env | /bin/grep KEY
env | grep KEY
env
PATH=lol env
env
PATH=lol env
env
PATH=lol env
ls
PATH=lol env
ls
echo $PATH
env
ls
env
setenv LO=ol
env
ls
PATH=lol env
env
setenv A=b
ls
env
PATH=lol env
ls
PATH=lol env
ls
PATH=lol set
ls
env
PATH=lol set
ls
PATH=lol env
ls
echo $A
env
setenv A=o
echo $a
set
setenv a=b
ls
setenv PATH=/bin
ls
PATH=lol set
ls
env
set
env
PATH=lol set
ls
env
PATH=lol set
ls
env
PATH=lol set
ls
PATH=lol set
ls
PATH=lol set
ls
PATH=lol set
ls
echo $HOME
echo $PATH
set
HOME=WOUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU set
PATH=lol set
set
env
PATH=lol set
ls
set
env
PATH=lol set
env
set
a=b set
env
a=b env
set
a=b set
a=b echo $a
ls
set
env
ls
env
ls
PATH=lol set
env
ls
set
a=b set
env
set
ls
set
PATH=lol set
set
PATH=lol set
set
env
PATH=lol set
set
env
set
PATH=lol set
env
set
PATH=lol set
ls
env
set
sey
PATH=lol set
set
zouzou=ol set
zouzou=ol | zouou=wo echo $zouzou
zouzou=ol | echo $zouzou
zouzou=ol echo $zouzou
set
env
zouzou=ol env
set
zuzu=l $zuzu
e=a  echo $e
e=a | echo $e
set
a=b
a=b set
a=b echo $a
set
lol=qw
lol
zouz=d env | grep zouz
set
zouz=d set | grep zouz
zouz=d env | grep zouz
a=b echo$sdfsdf
a=b echo$PATH
echo$PATH
a=b set
a=b | echo $a
a=b  echo $a
a=b | echo $a
a=b set
a=b echo $a
set
a=b | echo $a
set
a=b | echo $a
set
env
export a
a=b
all=e env 
all=e env | grep all
ap=lo env | grep ap
apo=el env | grep apo
apo=el env 
apo=el env | grep apo
a=j env
set
a=a
set
a=v
a=r set
a=b
set
r=t set
set
a=b
set
a=r  set
a=c
a=f set
a=v
set
a=c set
set
a=b
set
a=b set
set
a=c
set
a=c set
a=v set
a=c set
set
a=c set
a=b
a=b set
set
a=b set
set
a=c
set
a=b v=l
set
env
unsetenv A
set
env
setenv A=b
ls
env
setenv A=B
setenv A+B
env
set
a=b
make
a=b
set
a=b
set
a=b
set
a=b
set
a=b
set
a=b
./
make
ls
a=c
set
a=b
set
a=b
env
setenv A=b
env
set
setenv A=lol
env
set
v=r
set
env
setenv A=lol
echo $?
unsetenv OLO
ls "au|teur"lol lol | pwd
set
env
setenv PATH=lol
set
env
setenv A=B
setenv PATH=lol
env
set
setenv PATH=lol
set
env
setenv PATH=lol
env
set
setenv A=c
set
setenv a=b
set
env
setenv A=b
env
set
a=b
set
env
a=b
env
set
a=b
set
env
setenv a=b
env
set
setenv a=b
set
setenv e=r
env
PATH=lol
env
PATH=lol
env
set
PATH=lol
set
env
setenv f=l
env
setenv A=B
env
set
env
A=B
set
env
setenv FOR=ENV
env
set
setenv FOR=ENV
env
set
setenv ENV=lol
set
env
setenv ENV=lol
env
set
A=B
set
set A=B
env
set
setenv A=vat
echo ${a:=lol}
=======
echo "$((a <<= 1))" $a
echo "$((a >>= 1))" $a
echo "$((a >>= 2))" $a
echo "$((a <<= 2))" $a
echo "$((a ^= 4))" $a
echo "$((a ^= 2))" $a
echo "$((a ^= 3))" $a
echo "$((a &= 0))" $a
echo "$((a &= 4))" $a
echo "$((a |= 2))" $a
echo "$((a |= 0))" $a
echo "$((a |= 5))" $a
echo "$((a %= 5))" $a
echo "$((a /= 2))" $a
echo "$((a *= -42))" $a
echo "$((a -= 43))" $a
echo "$((a += 43))" $a
echo $((a += 43)) $a
echo $((a)) $a
echo $((a--)) $a
echo $((--a)) $a
echo $((++a)) $a
echo $((a++)) $a
echo $((a))
echo $a
echo $((a=42))
echo "$((a + 10))"
echo "$((a))"
a=a
echo "$((a + 8))"
echo $((a + 8))
echo $((a))
echo $a
a=42
echo $((42))
echo $((2**-3))
echo $((2**--3))
echo $((2**3))
echo $((2**-3))
echo $((2**3))
echo $((42))
echo $((\(\())
echo $((\(42))
echo $((\())
echo "$((++a   --))"
echo $((++a   --))
echo $((++a--))
echo $((3=12))
echo $((3+a=12))
make
echo $((3+a=12))
echo $((a=12))
$((a=12))
ls
$((6=12))
$((=12))
echo $((8+))
echo $((\(42))
echo $((\())
echo \$(("(4"2)))
echo $(("(4"2)))
echo $(("(")))
echo $(("("))
echo $(("("42))
ls
echo $((42+?))
echo $((42))
ls
ls < < >
ls &&
echo "$((32 + 10))"
echo $((32 + 10))
git pull
echo $((-9223372036854775809))
echo $((9223372036854775809))
echo $((9223372036854775808))
echo $((-9223372036854775808))
echo $((2**63))
echo $((2**62))
echo $((2**60))
echo $((2**32))
echo $((2**2))
echo $((2**63))
echo $((()))
echo $(())
echo $((42))
echo $(($PATH))
echo $(())
echo "`haha"
echo "`haha`"
echo `haha`
env
LANG=ok
env
a=lol
env
export a
env
a=lol
export a=42
>>>>>>> 8533c0e7f5afa2f5442a4be5220e61a3006b02f8
echo ${a-lol}
echo ${a:-lol}
a=
echo ${a-lol}
echo ${a:-lol}
echo $a
set
a=
echo ${:-haha}
echo ${haha:-haha}
echo ${haha:-${}}
git status
echo ${:-lol}
echo ${}
echo ${:=${}}
echo ${haha:=${}}
echo ${haha:-${}}
echo ${:-${}}
echo ${:-lol}
git status
ls
echo ${PAT:?}
ls -z
echo ${PAT:?}
echo ${PATH:?}
ls -z
echo ${}
ls -z
echo ${}
echo ${PATH:+LOL}
echo ${PATH:-LOL}
echo ${PATH}
ls
echo ${}
echo ${lala=${}}
echo ${lala:=${}}
echo ${lala=${}}
echo ${lala:=${}}
echo ${lala:-${}}
echo ${lala:-${lala}}
echo ${lala:-{}}
echo ${lala:-{lala}}
echo ${lala:-lala}
echo ${a:=LUL}
echo $a
echo ${a:=LOL}
ls
pwd
ls
fg
kill -9 38466
ls -R / | cat -e
fg
jobs
kill -9 38451
ls -R / | cat -e
fg
jobs
kill -9 38439
ls -R / | cat 
fg
kill -9 38430
ls -R / | cat 
fg
kill -9 38415
ls -R / | cat 
fg
kill -9 38335
ps
ls -R / | cat
fg
jobs
kill -9 38293
ls -R / | cat 
ls
fg
jobs
kill -9 38263
ls -R / | cat -e
fg            
cat &
make
fg
kill -9 38222
jobs
ls -R / | cat -e
fg
cat &
fg
cat &
fg
cat &
fg
cat &
fg
cat &
fg
kill -9 38053
jobs 
ls -R / | cat -e

fg
kill -9 37994
jobs
ls -R / | cat -e
fg
cat &
type ls
fg
type dhdhddh
echo lol
ls
type bg
whereis bg
bg &
fg
bg &
fg &
ls
fg
ps
fg
cat &
ps
fg
cat &
fg
cat &
cat
fg

cat /dev/random &
ls &
ps
fg
jobs
kill -9 37802
ps
jobs
ls -R / | cat -e
fg
jobs
kill -9 37762
jobs
ls -R / | cat -e
ps
fg
jobs
kill -9 37716
jobs
ls -R / | cat -e
jobs
fg
jobs
kill -9 37666
jobs
ls -R / | cat -e
cat toto
ls > toto
ls
sdfsdfsdfsdf
cd gdfg
ls
cd dsdf
env
pwd
ls
a=b env
a=b e=r
a=b
a=b g=e
a=b
a=b env
make
a=b env
a=c
a=b

a=b
a=b env
env
a=b env
a=c env
a=b env
a=d env
a=c
a=b
a=c env
a=b
type ls
echo $?
lsk;lk
pwd
cat
fg
jobs
cat &
pwd
ld
$dsfsd
echo $loll
sdfsdf
pwd
ls
$sdfsdf
asasd
coucou
ls
pwd
ls
echo ${PATH}
cou
ls 1>&$a | grep lol
ls 1>&$a
set
a=-
ls pol 2>&$a | grep :
a=1
ls $a>&-
ls $1>&-
a=1
ls
rm 0
ls fsdf
ls
d
ls
grep
cat sdfs
ls sdfsdfs
ls
ls dfg >&-
ls $c>&-
c=1
c=0
$c
ls
ls > $c
c="ls -l"
cat 0
ls
ls > $c
set
c="$?"
echo $c
set
c="\$?"
set
c="\$?"
c="$?"
set
c=~/etienne
env
setenv c="$?"
env
setenv c="\$?"
set
c="\$PATH"
set
c="\$?"
set
echo "\$?"
ls
echo "$?"
ls "a""u""t"eur
echo "ls'"
echo "'"
echo '\''
env
setenv A=ol B=pol
a=def
echo \"
echo \'
echo "\\'abcd\\'"
cat
cat 
fg
cat 
sh sig.sh
vim sig.sh
python -c 'import os, signal;os.kill(os.getpid(), 4)'
vim sig.sh
python -c 'import os, signal;os.kill(os.getpid(), signal.4)'
python -c 'import os, signal;os.kill(os.getpid(), signal.SIGILL)'
python -c 'import os, signal;os.kill(os.getpid(), signal.SIGQUIT)'
python -c 'import os, signal;os.kill(os.getpid(), signal.SIGINT)'
fg
python -c 'import os, signal;os.kill(os.getpid(), signal.SIGHUP)'
python -c 'import os, signal;os.kill(os.getpid(), signal.SIGKILL)'
python -c 'import os, signal;os.kill(os.getpid(), signal.SIGSEGV)'
cat
ls
cat
ls
cat
ls
cat
ls
cat
ls
cat
ls
echo $?
ls
cat
make
cat
echo $?
cat
ls | python -c 'import os, signal;os.kill(os.getpid(), signal.SIGSEGV)'
python -c 'import os, signal;os.kill(os.getpid(), signal.SIGKILL)'
jobs
fg
python -c 'import os, signal;os.kill(os.getpid(), signal.SIGSEGV)'
cat
python -c 'import os, signal;os.kill(os.getpid(), signal.SIGSEGV)'
ls
python -c 'import os, signal;os.kill(os.getpid(), signal.SIGSEGV)'
python3 -c 'import os, signal;os.kill(os.getpid(), signal.SIGSEGV)'
python -c 'import os, signal;os.kill(os.getpid(), signal.SIGSEGV)'
python3 -c 'import os, signal;os.kill(os.getpid(), signal.SIGSEGV)'
python -c 'import os, signal;os.kill(os.getpid(), signal.SIGSEGV)'
ps a | grep "ls -Rl /" | grep -v 'grep'
jobs
kill -9 82661
jobs
ps a | grep "ls -Rl /" | grep -v 'grep' | cut -d ' ' -f 2
ps
ps a | grep "ls -Rl /" | grep -v 'grep' | cut -d ' ' -f 2
jobs
fg %1
jobs
ls -Rl / 2>&1
jobs
cat -e
jobs
fg
jobs
fg
jobs
fg %2
jobs
emacs -nw &
jobs
ls -lR /usr >fifo 2>&1 &
mkfifo fifo
rm fifo
mkfifo fifo
jobs
emacs -nw &
jobs
ls -lR /usr >fifo 2>&1 &
mkfifo fifo
true; echo $?; false; echo $?
true; echo ${?}; false; echo ${?}
ls -1 | grep testdir
echo ${?}
mkdir testdir
PATH=/bin:/usr/bin
echo lol
l	
l
ls
unset PATH
l
l	.gitignore
ls
unset PATH
set | grep PATH
env | grep PATH

rm -rf lol
ls
mkdir lol
set
unset PATH
set
unset PATH
mkdir testdir
unset PATH
env
set
ls
env
/bin/ls
ls
mkdir test
echo $PATH
mkdir testdir
PATH=/bin:/usr/bin
unset PATH
ls -1 | grep testdir
echo ${?}
mkdir testdir
PATH=/bin:/usr/bin
unset PATH
set
set | grep -E '(a|b)='
env | grep -E '(a|b)='
unset a b
b=mdr
a=lol
env | grep ONESHOT
ONESHOT= env | grep ONESHOT
ls
ONESHOT= env | grep ONESHOT
set
coucou=2 set | grep coucou
coucou=1
coucou=2 set | grep coucou
coucou=1
coucou=2 set | grep coucou
coucou=1
coucou=2 set
coucou=1
coucou=2 set
coucou=1
coucou=2 set | grep coucou
coucou=1
coucou=2 set
coucou=1
coucou=2 set | grep coucou
set
coucou=1
coucou=lolo set | grep coucou
coucou=lolo set 
coucou=lolo set | grep coucou
coucou=coco
cat myset
coucou=pol set > myset
coucou=pol set 
coucou=pol set | grep coucou
set
coucou=cac
ONESHOT= env | grep ONESHOT
coucou=tsts set | grep coucou
set
se
coucou=caca set
set
coucou=lol
COC=papa set | grep COC
set | grep COC
set
COC=ol
COC=ol set
COC=ol set | grep COC
a=b
set
ONESHOT= set | grep ONESHOT
ONESHOT= set 
ONESHOT= env 
ONESHOT= env | grep ONESHOT
make
ONESHOT= env 
ONESHOT= env | grep ONESHOT
env
ONESHOT= env
ONESHOT= env | grep ONESHOT
COUCOU=lol env | grep COUCOU
COUCOU=lol set | grep COUCOU
COUCOU=lol set 
env
COUCOU=lol
env
ONESHOT= env 
ONESHOT= env | grep ONESHOT
set
a=v set
set
a=r
ONESHOT= set | grep ONESHOT
ONESHOT= env | grep ONESHOT
ONESHOT= env 
ONESHOT= env | grep ONESHOT
set
env
a=t env
a=b set
a=r
ONESHOT= set | grep ONESHOT
ONESHOT= env | grep ONESHOT
set
a=b set
set
a=b ls
set
a=r 
COU=cou env | grep COU
env | grep SHLVL
env
COU=cou env | grep COU
env
COU=cou env
ONESHOT= env 
ONESHOT= env | grep ONESHOT
set
env
a=yy ls
set
env
a=t env
set
a=t set
env
set
se
a=r 
env
set
myvar=test ls
env
set
env
set
myvar=test
env
set
env
b=ert
env
set
env
set
a=qko env
set
env
set
a=pl 
set
a=pl set
set
a=t
set
a=e
env
set
a=r env
set
a=r set
set
a=b
set
env
a=rt env
env
a=r env
set
a=w
env
a=b env
a=r set
a=r se
A=QUOI env
a=tt env
env
set
a=r 
a=r set
set
a=t
set
a=b set
a=b env
a= env
a= set
a=b set
set
a=g ls
set
a=b set
set
a=o ls 
a=o set
set
a=o set
a=o ls
a=e ls
a=g ls
a=sdfsdf ls
apl=er ls
acoucou=er ls
set
acoucou= set
ad= set
set
ad=
echo $?
setenv a=r
a=yy echo $a
a=b
setenv dsfsdf sdfsdf
setenv dsfsdf
setenv a==y
setenv a=o i=4
setenv
setenv fdldlkfj
a=lolplplp echo $a
echo $a
a=b
env a=rt
env a=t
env a=g
env a=b
ls a=b
env a=b
ls a=b
set
env a=sdf
a=pour echo $a
set
a=b set
a=hello b=world; b=42 echo ${a}_${b} && echo ${b}
a=hello b=world
a=hello b=world; b=42 echo ${a}_${b} && echo ${b}
./a.out
ls
$a
a="ls -l"
echo $a
set
a=~/etienne
echo $a
a=~
echo $a
a=~/etienne
echo $a
a=~/etienne
$a
a="~/etienne"
echo $?
exit lol
exit abc
echo sdf ; exit
exit
echo sdf
exit ; ls
exit
echo abc; exit; echo def
exit
exit 999999999999999999999999999999999999999999
echo ${?}
echo abc; exit; echo def
cat -e << FIN | sort
cat /tmp/heredoc-append
cat -e >> /tmp/heredoc-append << FIN
cat > /tmp/heredoc-append << FIN
cat << END
echo out >&- || echo out2
echo out >&- && echo out2
echo out >&- | echo out2
echo out >&-; echo out2
exit 1 | exit 2 | exit 3; echo "stayin' alive"
ls -1; touch test_file; ls -1
ps a | grep 'base64' | grep -v 'grep'
base64 < /dev/urandom | head -c 1000 | grep 42 | wc -l | sed -e s/1/Yes/g -e s/0/No/g
ls | sort -rn | cat -e
ls doesnotexist . >/dev/null 2>&1
ls doesnotexist . 2>&1 >/dev/null
cat < auteur
cat <&- auteur
cat <&- abc
cat 9 abc$
echo abc >redir_one_to_all
cat <&4
cat 4 non-standard fd$
echo non-standard fd > dup_fd
cat out
cat err
echo 2 >out 2>err
echo 1 >out >&2 2>err
cat /tmp/ftsh_ls_out
< /tmp/ftsh_ls_out cat -e >> /tmp/ftsh_ls_out
cat /tmp/ftsh_ls_out
ls > /tmp/ftsh_ls_out /
$a
a="ls > pol"
'ls > toto'
"ls > toto"
echo 1 >out >&2 2>err
echo $?
ls
echo $?
ls
ls """"""
ls $HOME$PATH
ls "" "" ""
echo $?
ls """"""
cat """"""""""
echo """"""""""""""""""""""
ls """"""""""""""""""""""""
lsdmflsdf
sfsdfkj
pld
./
..
pwd
echo $??
echo $?
lssdf
echo $?
ls
echo $?
echo $HOME
echo $
ls
echo $sdfsdf | ls
echo $sdfsdf
echo $PATH
echo $?
echo $a
e
a=b
echo $PATH
echo $a
a=b
echo $PATH
ls $?
echo $?
ls
echo $?
bash
echo $?
fsdfsdf
echo $?
ls
echo $?
ls \ls
./././.
dfsdf
../quote.sh
..
../quote.sh
pwd
../
..
ls
././././
...
./
.
jobs
pwd
..
make
pwd
ls
..
ls
..
:q
..
ls
..
../
ls
..
ls
..
ls
..
.
..
ls
..
echo $?
ls
echo $?
..
./poission_davril
make
vim src/execution/manage_path_cmd.c
./poission_davril
vim /Users/moi/quote.sh
sh ~/quote.sh

~/quote.sh
~/quotes.sh
~/quote.sh
/Users/moi/quote.sh
/Users/moi/quotes.sh
~/quotes.sh
./poission_davril
./a.out
../quote.sh
~/quote.sh
type ls
ls
type ls
type pol
ls
type lol
type
ls
echo lol | ls
pwd
ls
echo "lol'\""
echo "lol'"
echo "lol"""
echo "lol"
ls "pol"
cat popo
echo lol > popo
$a
a=b
env ls
env
ls
ls | cat | grep          
ls | cat | grep 
pwd && echo 43 && lkjlkj || echo 78
ls | cat | grep 
ls | cat | grep auteur 
ls auteur 
fg
cat /dev/random &
jobs
cat &
pwd
ls
sh b
ls ; echo 0 || ls
ls ; echwe || ls
kill 77134
jobs
cat &
ls ; echi 42 || ls
ls ; echo 42 && ls
ls | cat -e
jobs
cat &
ls
cat toto
echo olo > toto
echo olo
ls ; echo coucou && ls | cat -e
ls

ls
echo lol
ls ; echo coucou && ls | cat -e
ls ; echo coucou && ls | cat
ls | cat | grep
ls | cat | grep auteur
ls | cat
ls | cat | grep   
ls | cat | grep 
ls | cat | grep
ls | cat | grep 
ls | cat | grep dfgdfgdfgdfg
ls | cat | grep
ls | cat | grep dfdfg
ls | cat | grep
ls | cat | grep 
ls | cat | grep auteur
ls -l
ls
ls 
ls | grep 
ls | cat | grep 
ls | cat | grep auteur
ls | cat | grep 
ls | cat | grep auteur
ls | cat | grep 
ls | cat | grep auteur
ls | grep
ls | grep auteur
ls
ls -l
ls
ls | cat | grep 
ls | cat | grep auteur
ls | cat
ls
ls | cat | grep 
ls | cat | grep auteur
ls | cat | grep
ls | cat
ls
ls | cat 
ls | cat | grep 
ls | cat | grep auteur
ls
ls | cat | grep auteur
ls | cat
ls | cat | grep auteur
ls | cat
ls | cat | grep auteur
ls | cat
ls | cat | grep auteur
ls | cat
ls | cat | grep auteur
ls
pwd
ls
ls | cat | grep auteur
ls | cat | grep
ls | cat
ls
ls 
ls | cat 
ls | cat | grep auteur 
ls | cat
echo 42 && echo 23
env
setenv a=b c=d
setenv a=b
env
setenv
fg
top
setenv a=b
echo lol
ecjo
ls
echo 123 && echo 345
echo 123 || echo 345
echo 123
echo 345 && echo lol
ECHO lol
LS
ls
echo lol && echo lsls
echo lol || echo lsls
echo lol
cat test1
echo loool > test1
cat /dev/urandom &
fg


fg



cat /dev/urandom &
g
fg
cat /dev/urandom &
jobs
ls




fgf




fg



fg


fg


fg

fg

fg


fg







fg


fg

fg[?62;4c










fg



pwd
dfsdf


cat /dev/random &
fg





fg


fg








ls
fg










fg




fg










fg






cat /dev/random &
jobs
fg




q

fg


fg





fg

cat /dev/random &
fg


cat /dev/random &
fg
cat /dev/random &
fg

cat /dev/random &
fg
cat /dev/random &
fg

cat /dev/random &
fg

cat /dev/random &
pwd
ls
fg


fg
ls
fg
cat /dev/random &
pwd
ls
top
ls
la
ls
fg
top
fg
cat /dev/zero &
fg
cat /dev/zero &
jobs
cat /dev/zero &
fg
jobs
cat /dev/zero &
fg
jobs
cat /dev/zero &
fg
jobs
ls
cat /dev/zero &
cat
sdfsd
ls 
cat
sfsfd
pwd
ls
cat
sl
ls
cat 
dfsd
sdfsdf
ls
s
swswsws
s
ocoll
ls
dfsdfsdf
ls
dfsdf
d
asdasdasd
a=b
cat < auteur << eof
cat << 1 << 3 << 4
ls << pol
ls \>top -l
ls \>top
ls > top
ls \> top
ls \> 12
ls > 12
ls 
ls \> 12
ls \> lop
cat pol
ls > pol
cat toto
echo 12312 > toto
cat toto
ls
ls > toto
ls
ls > pol
ls > totl
ls
ls > pol
ls \> lol
ls
ls \> lol
ls
rm \ll lol coco 
ls
ls \> kik
ls \> lop
ls \> pop
ls
ls >\ll
ls
ks
ls
ls \> lol
ls \>tt
ls \> toto
ls \> lol
fg
bg
ls -R / | grep 42
cat < auteur dfgdfg
cat \<< auteur
ls \<< op
ls \&>coco
ls \>find name 
ls > toto nae
ls \ls
ls ls
ls \>find name
ls
echo -n wrwerw werwer werwer
echo -n wwer werwer
echo wwer werwer
echo wwer
echo l dfsdf
echo l
echo sfsdf               sdfsdf
echo -n lol
echo -n
ls
echo -n 
echo -n lol
echo lol
echo ls
echo -n
echo

jobs &
jobs
ls
jobs &
jobs
jobs &
ls &
ls
a=3 &
ls
type ls
env
type ls
set
type type
type ls
type -l
type 
type ls &
jobs
a=5 &
a=b
ls
echo $a
cat \<
cat \<<
ls \>
ls \|
ls \"
ls \ls
make
kill -9 31031
killall top
jobs
top 
set
a=c set
a=b
set
a=b ls
a=r
a=b ls
a=r
a=r ls
a=b
a=r ls
set
a=b b=r
set
a=b lol=er
set
a=r ls
a=b
a=c ls
a=b
a=c ls
a=b 
a=c ls
a=b
a=b ls
a=c
a=t ls
set
a=c
a=s
a=c ls
a=b
set
a=r ls
a=b
a=r ls
a=b
a=r ls
set
a=b
a=r ls
a=b
a=r ls
a=b
a=r ls
a=b
a=r ls
set
env
a=b
a=r ls
a=b 
a=r ls
a=b
a=r ls
a=b
a=r ls
a=b
a=r ls
a=b
set
a=r la
set
l=r la
set
a=b
set
=======
exit
echo test && echo coucou
>>>>>>> 1675f045ea0deb6d29a0375e72507fa3316575c4
ls
echo test && echo coucou
ls
echo test && echo coucou
ls
echo test && echo coucou
ls
echo test && echo coucou
ls
echo test && echo coucou
ls
echo test && echo coucou
u
&& echo coucou
u
oucou
u
